name: Android Build

on: pull_request

jobs:
  Restore_cache_job:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Restore Cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{runner.os}}-gradle-${{ hashFiles('**/*.gradle*')}}
          restore-keys: |
            ${{runner.os}}-gradle-

  Set_up_jdk:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Set Up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      # Step 2: Decode Google services configuration file
      - name: Decode google-services.json
        env:
          FIREBASE_CONFIG: ${{ secrets.FIREBASE_CONFIG }}
        run: echo $FIREBASE_CONFIG > app/google-services.json

  Unit_Tests_Coverage:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - name: Run Unit Test
        run: ./gradlew :common:jacocoTestReport

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./common/build/reports/coverage/jacocoTestReport/jacocoTestReport.xml
          directory: ./common/build/reports/coverage/jacocoTestReport/


  Instrumented_test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Generate Debug apk
        run: ./gradlew assembleDebug

      - name: Generate Android Test apk
        run: ./gradlew assembleAndroidTest
      # Step 4: Run instrumented tests on firebase test lab
      - name: Run tests on Firebase Test Lab
        uses: asadmansr/Firebase-Test-Lab-Action@v1.0
        with:
          arg-spec: '.github/tests.yml:android-pixel-4'

        env:
          SERVICE_ACCOUNT: ${{ secrets.SERVICE_ACCOUNT }}

  Build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1

      - name: Build project
        run: ./gradlew assemble



#      - name: Upload Apk
#        uses: actions/upload-artifact@v2
#        with:
#          name: apk
#          path: app/build/outputs/apk/debug/**.apk




